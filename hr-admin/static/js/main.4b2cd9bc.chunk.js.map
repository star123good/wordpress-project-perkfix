{"version":3,"sources":["components/AdminAppBar.js","components/AdminLayout.js","components/AdminMenu.js","components/EditFormLabel.js","components/EditRowGrid.js","components/EditSelectInput.js","components/EditTextInput.js","components/EditToolbar.js","components/EditCheckBox.js","components/EditImageCropper.js","pages/automation/index.js","pages/faq/index.js","pages/home/index.js","pages/inbox/index.js","pages/myOrg/OrgInfo.js","pages/myOrg/PaymentSetupStyle.js","pages/myOrg/PaymentSetup.js","pages/myOrg/PaymentPlaid.js","pages/myOrg/Invoices.js","pages/myOrg/TaxInfo.js","pages/myOrg/UserSettings.js","pages/myOrg/AcmeInc.js","pages/myOrg/index.js","pages/perks/index.js","pages/reports/index.js","pages/settings/index.js","pages/setup/index.js","pages/teams/index.js","pages/tools/index.js","pages/NoFound.js","services/addUploadCapabilities.js","services/dataProvider.js","i18n/en.js","i18n/i18nProvider.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","height","appBar","backgroundColor","justifyContent","logoutButton","marginRight","spacing","marginLeft","menuButton","title","fontSize","StyledBadge","withStyles","badge","color","boxShadow","palette","background","paper","position","top","left","width","borderRadius","animation","border","content","transform","opacity","Badge","AdminAppBar","classes","dispatch","useDispatch","className","AppBar","Toolbar","IconButton","aria-label","onClick","toggleSidebar","src","process","alt","Typography","variant","Button","badgeContent","overlap","anchorOrigin","vertical","horizontal","Avatar","AdminLayout","props","Layout","menu","AdminMenu","notification","Notification","menuItem","margintTop","marginBottom","activeClass","programDivider","marginTop","settingDivider","ProgramDivider","open","style","paddingLeft","SettingDivider","withRouter","onMenuClick","logout","useSelector","state","admin","ui","sidebarOpen","resources","getResources","useTheme","matches","useMediaQuery","breakpoints","up","map","resource","customMenuItem","MenuItemLink","key","name","to","options","url","primaryText","label","leftIcon","createElement","icon","sidebarIsOpen","activeClassName","StyledLabel","fontWeight","asterisk","FormLabel","children","basePath","Grid","container","alignItems","SelectInput","source","TextInput","placeholder","toolbar","button","textTransform","buttonCancel","buttonSave","paddingRight","onSubmit","onCancel","cancelButtonLabel","saveButtonLabel","other","redirect","submitOnEnter","size","SaveButton","EditCheckBox","this","rest","Checkbox","checkedIcon","uncheckedIcon","disableRipple","Component","display","checked","fill","padding","EditDialog","showDialog","handleSaveClick","handleCloseClick","dialogRef","onSelectFile","fileRef","React","createRef","useState","currentFile","setFile","Dialog","fullWidth","onClose","ref","DialogTitle","DialogContent","margin","cursor","console","log","current","type","id","zIndex","bottom","onChange","e","target","files","length","DialogActions","EditImageCropper","readFile","file","reader","FileReader","addEventListener","setState","result","readAsDataURL","onImageLoaded","image","onCropComplete","crop","percentCrop","makeClientCrop","onCropChange","onDragStart","onDragEnd","onChangeToIncompleteCropClick","aspect","unit","onChangePhtoClick","preventDefault","renderVideo","mp4Url","autoPlay","loop","maxWidth","onLoadStart","dispatchEvent","Event","bubbles","renderSelectionAddon","bind","fileName","canvas","document","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","Promise","resolve","toBlob","blob","window","URL","revokeObjectURL","fileUrl","createObjectURL","imageRef","getCroppedImg","then","croppedImageUrl","submit","flexDirection","ruleOfThirds","onComplete","href","PureComponent","Automation","Card","CardHeader","CardContent","Faq","Home","Inbox","OrgInfoEditForm","Edit","path","SimpleForm","EditToolbar","validate","values","EditRowGrid","item","md","sm","xs","EditFormLabel","required","EditTextInput","EditSelectInput","choices","component","CustomTypography","CustomHr","OrgInfoAddressEditForm","errors","secondary_email","secondary_number","message","OrgInfoEdit","value","index","statusValue","setStatusValue","role","hidden","aria-labelledby","PaymentSetupStyle","inactiveNav","textDecoration","activeNav","button_active","PaymentSetup","active_flag","captcha_error_flag","captchaSettings","set","captchaEndpoint","apiBaseUrl","onClickCaptcha","FormWithCaptchaOnSubmitHandler","flag","event","postData","captcha","getUserEnteredCaptchaCode","getCaptchaId","fetch","method","body","JSON","stringify","response","json","data","success","catch","err","Box","p","validatePaymentUpdate","setActive","paddingTop","captchaStyleName","PaymentPlaid","token","metadata","clientName","env","publicKey","product","countryCodes","onEvent","handleOnEvent","onExit","handleOnExit","onLoad","handleOnLoad","onSuccess","handleOnSuccess","Invoices","TaxInfo","onChangePasswordClick","onChangeIDClick","UserSettings","AcmeInc","a11yProps","bar","tab","tabPanel","MyOrgBar","setValue","Tabs","newValue","Tab","MyOrgEdit","Perks","Reports","Settings","Setup","Teams","Tools","Title","convertFileToBase64","reject","rawFile","onload","onerror","addUploadCapabilities","requestHandler","params","pictures","formerPictures","filter","File","newPictures","all","base64Pictures","picture64","transformedNewPictures","dataProvider","jsonServerProvider","headers","Headers","Accept","basicAuth","btoa","apiUsername","fetchUtils","fetchJson","addUploadFeature","ra","action","add_filter","add","back","bulk_actions","cancel","clear_input_value","clone","confirm","create","delete","edit","export","list","refresh","remove_filter","remove","save","search","show","sort","undo","expand","close","open_menu","close_menu","ach_btn","debit_btn","next","upload","boolean","true","false","null","page","dashboard","error","loading","not_found","empty","invite","input","upload_several","upload_single","references","all_missing","many_missing","single_missing","password","toggle_visible","toggle_hidden","about","are_you_sure","bulk_delete_content","bulk_delete_title","delete_content","delete_title","details","invalid_form","no","yes","unsaved_changes","navigation","no_results","no_more_results","page_out_of_boundaries","page_out_from_end","page_out_from_begin","page_range_info","page_rows_per_page","prev","auth","auth_check_error","user_menu","username","sign_in","sign_in_error","updated","created","deleted","bad_item","item_doesnt_exist","http_error","data_provider_error","i18n_error","canceled","logged_out","validation","minLength","maxLength","minValue","maxValue","number","email","oneOf","regex","secondaryNotEqualPrimary","pages","org","sCorp","tCorp","stCorp","savingsAccount","checkingAccount","messages","englishMessages","locale","i18nProvider","translate","lodashGet","changeLocale","newLocale","getLocale","allowMissing","App","userId","localStorage","getItem","teamId","orgId","Admin","layout","catchAll","NoFound","Resource","HomeOutlinedIcon","TuneOutlinedIcon","HouseOutlinedIcon","BuildOutlinedIcon","ReportOutlinedIcon","ForumOutlinedIcon","CardGiftcardOutlinedIcon","PeopleOutlineOutlinedIcon","BrightnessAutoOutlinedIcon","SettingsIcon","InfoIcon","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b2cd9bc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { toggleSidebar } from 'ra-core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 50\r\n  },\r\n  appBar: {\r\n    backgroundColor: '#4d4d4d',\r\n    height: 100,\r\n    justifyContent:'center'\r\n  },\r\n  logoutButton: {\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: theme.spacing(4),\r\n    backgroundColor: '#00c888'\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    fontSize: 30,\r\n    marginLeft: theme.spacing(5)\r\n  },\r\n}));\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: '#44b700',\r\n    color: '#44b700',\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    '&::after': {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      borderRadius: '50%',\r\n      animation: '$ripple 1.2s infinite ease-in-out',\r\n      border: '1px solid currentColor',\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  '@keyframes ripple': {\r\n    '0%': {\r\n      transform: 'scale(.8)',\r\n      opacity: 1,\r\n    },\r\n    '100%': {\r\n      transform: 'scale(2.4)',\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n\r\nconst AdminAppBar = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => dispatch(toggleSidebar())}>\r\n            <img src={process.env.PUBLIC_URL + '/images/perkfix-green-logo-pf.png'} alt=\"logo\" width=\"25\"/>\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            People Ops\r\n          </Typography>\r\n          <Typography className={classes.menuButton}>\r\n              Welcome back, Amy.\r\n          </Typography>\r\n          <Button color=\"inherit\" variant=\"contained\" className={classes.logoutButton}>\r\n            Log Out\r\n          </Button>\r\n          <Badge badgeContent={\"!\"} color=\"error\" className={classes.menuButton}>\r\n            <MailIcon />\r\n          </Badge>\r\n          <IconButton className={classes.menuButton}>\r\n            <StyledBadge\r\n                overlap=\"circle\"\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n                }}\r\n                variant=\"dot\"\r\n            >\r\n                <Avatar alt=\"Remy Sharp\" src={process.env.PUBLIC_URL + '/images/avatar/1.png'} />\r\n            </StyledBadge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminAppBar;","import React from 'react';\r\nimport { Layout, Notification } from 'react-admin';\r\nimport { AdminAppBar, AdminMenu } from './';\r\n\r\nconst AdminLayout = (props) => {\r\n    return (<Layout\r\n        {...props}\r\n        appBar={AdminAppBar}\r\n        menu={AdminMenu}\r\n        notification={Notification}\r\n    />);\r\n};\r\n\r\nexport default AdminLayout;","import React, { createElement } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { MenuItemLink, getResources } from 'react-admin';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menuItem: {\r\n        margintTop: 5,\r\n        marginBottom: 5,\r\n        color: '#000'\r\n    },\r\n    activeClass: {\r\n        backgroundColor: '#868686',\r\n        color: '#fff'\r\n    },\r\n    programDivider: {\r\n        marginTop: 50\r\n    },\r\n    settingDivider: {\r\n        marginTop: 100\r\n    }\r\n}));\r\n\r\nconst ProgramDivider = (props) => (\r\n    <div className={props.classes.programDivider}>\r\n        { props.open ?\r\n        (<>\r\n        <hr/>\r\n        <h3 style={{ paddingLeft : 20, marginBottom: 0 }}>Program</h3>\r\n        <h3 style={{ paddingLeft : 20, marginTop: 0 }}>Management</h3>\r\n        </>)\r\n        : \r\n        <hr/> }\r\n    </div>\r\n);\r\n\r\nconst SettingDivider = (props) => (\r\n    <hr  className={props.classes.settingDivider}/>\r\n);\r\n\r\nconst AdminMenu = ({ onMenuClick, logout }) => {\r\n    const classes = useStyles();\r\n    const open = useSelector(state => state.admin.ui.sidebarOpen);\r\n    const resources = useSelector(getResources);\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up('sm'));\r\n\r\n    return (\r\n        <div>\r\n            {resources.map(resource => {\r\n                const customMenuItem = (\r\n                    <MenuItemLink\r\n                        key={resource.name}\r\n                        to={`/${resource.name}${(resource.options && resource.options.url) || ''}`}\r\n                        primaryText={(resource.options && resource.options.label) || resource.name}\r\n                        leftIcon={createElement(resource.icon)}\r\n                        onClick={onMenuClick}\r\n                        sidebarIsOpen={open}\r\n                        className={classes.menuItem}\r\n                        activeClassName={classes.activeClass}\r\n                    />\r\n                );\r\n                if (resource.name === \"perk\" && matches) {\r\n                    return [(<ProgramDivider key=\"programdriver\" classes={classes} open={open}/>), customMenuItem];\r\n                }\r\n                else if (resource.name === \"setting\" && matches) {\r\n                    return [(<SettingDivider key=\"settingdrvier\" classes={classes} open={open}/>), customMenuItem];\r\n                }\r\n                return customMenuItem;\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(AdminMenu);","import React from 'react';\r\nimport { FormLabel } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst StyledLabel = withStyles({\r\n    root: {\r\n        color: '#000',\r\n        fontSize: '1.2em',\r\n        fontWeight: 'bold',\r\n        paddingLeft: 20,\r\n    },\r\n    asterisk: {\r\n        color: \"red\"\r\n    },\r\n})(FormLabel);\r\n\r\nexport default (props) => (\r\n    <StyledLabel \r\n        {...props} \r\n    >\r\n        {props.children}\r\n    </StyledLabel>\r\n);","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default ({basePath, ...props}) => (\r\n    <Grid container spacing={2} alignItems=\"center\" style={{ width : '100%' }} >\r\n        {props.children}\r\n    </Grid>\r\n);","import React from 'react';\r\nimport { SelectInput } from 'react-admin';\r\n\r\nexport default (props) => (\r\n    <SelectInput \r\n        {...props} \r\n        source={props.source} \r\n        variant=\"outlined\" \r\n        label=\"\" \r\n    />\r\n);","import React from 'react';\r\nimport { TextInput } from 'react-admin';\r\n\r\nexport default (props) => (\r\n    <TextInput \r\n        {...props} \r\n        source={props.source} \r\n        variant=\"outlined\" \r\n        placeholder={props.placeholder} \r\n        label=\"\" \r\n    />\r\n);","import React from 'react';\r\nimport { Button, SaveButton, Toolbar } from 'react-admin';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolbar: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginBottom: 30,\r\n        marginRight: '15%',\r\n    },\r\n    button: {\r\n        textTransform: 'initial',\r\n        boxShadow: 'inset 0px 1px 0px 0px #ffffff',\r\n        background: 'linear-gradient(to bottom, #f9f9f9 5%, #e9e9e9 100%)',\r\n        backgroundColor: '#f9f9f9',\r\n        borderRadius: 6,\r\n        border: '1px solid #dcdcdc',\r\n        fontWeight: 'bold',\r\n        fontSize: '1.2em',\r\n    },\r\n    buttonCancel: {\r\n        color: '#000',\r\n        marginLeft: 'auto',\r\n    },\r\n    buttonSave: {\r\n        color: 'rgba(0, 145, 255, 1)',\r\n        marginLeft: 8,\r\n        paddingLeft: 30,\r\n        paddingRight: 30,\r\n    }\r\n}));\r\n\r\nexport default (props) => {\r\n    const classes = useStyles();\r\n    const { onSubmit, onCancel, cancelButtonLabel, saveButtonLabel, ...other } = props;\r\n    return (\r\n        <Toolbar {...other}\r\n            key=\"toolbar\"\r\n            className={classes.toolbar}\r\n            >\r\n            <Button\r\n                key=\"cancelButton\"\r\n                label={cancelButtonLabel || \"ra.action.cancel\"}\r\n                redirect={false}\r\n                submitOnEnter={false}\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                className={`${classes.button} ${classes.buttonCancel}`}\r\n                onClick={onCancel}\r\n            />\r\n            <SaveButton\r\n                key=\"saveButton\"\r\n                label={saveButtonLabel || \"ra.action.save\"}\r\n                redirect={false}\r\n                submitOnEnter={true}\r\n                size=\"large\"\r\n                className={`${classes.button} ${classes.buttonSave}`}\r\n                icon={(<></>)}\r\n                onClick={onSubmit}\r\n            />\r\n        </Toolbar>\r\n    );\r\n}","import React, { Component } from 'react'\r\nimport { Checkbox, withStyles } from '@material-ui/core';\r\nimport Check from \"@material-ui/icons/Check\";\r\n\r\nconst CheckBoxStyle = theme => ({\r\n    container: {\r\n        display: 'inline-block',\r\n        marginLeft: \"17px\"\r\n    },\r\n    label: {\r\n        color: '#000',\r\n        fontSize: '1.2em',\r\n        fontWeight: 'bold',\r\n        marginLeft: \"10px\" \r\n    },\r\n    checked: {\r\n        color: '#A30C0C',\r\n        fill: '#D8D8D8',\r\n        backgroundColor: '#D8D8D8',\r\n        '&:hover' : {\r\n            backgroundColor: '#D8D8D8'\r\n        }\r\n    },\r\n    root: {\r\n        border: '1px solid #707070',\r\n        fill: '#D8D8D8',\r\n    },\r\n    checkedIcon: {\r\n        width: \"20px\",\r\n        height: \"20px\",\r\n        border: \"1px solid #707070\",\r\n        backgroundColor: '#D8D8D8',\r\n        borderRadius: \"4px\",\r\n    },\r\n    uncheckedIcon: {\r\n        width: \"0px\",\r\n        height: \"0px\",\r\n        padding: '10px 10px',\r\n        border: \"1px solid #707070\",\r\n        backgroundColor: '#D8D8D8',\r\n        borderRadius: \"4px\",\r\n    },\r\n    asterisk: {\r\n        color: \"red\"\r\n    },\r\n});\r\n\r\nclass EditCheckBox extends Component\r\n{\r\n    render(){\r\n        const { classes, label, className, children, ...rest } = this.props;\r\n        return(\r\n            <div className={ `${className} ${classes.container}` } >\r\n                <Checkbox\r\n                    { ...rest}\r\n                    checkedIcon={<Check className={classes.checkedIcon} />}\r\n                    icon={<Check className={classes.uncheckedIcon} />}\r\n                    disableRipple\r\n                />\r\n                <span className={ `${classes.label}` }>{ children }</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(CheckBoxStyle)(EditCheckBox)","/* eslint-disable jsx-a11y/media-has-caption, class-methods-use-this */\r\nimport React, { Fragment, PureComponent } from 'react';\r\nimport ReactDOM from 'react-dom'; // eslint-disable-line\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { Button } from \"react-admin\";\r\nimport CloudUpload from '@material-ui/icons/CloudUpload';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DesktopMacIcon from '@material-ui/icons/DesktopMac';\r\nimport ShopIcon from '@material-ui/icons/Shop';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        textTransform: 'initial',\r\n        boxShadow: 'inset 0px 1px 0px 0px #ffffff',\r\n        background: 'linear-gradient(to bottom, #f9f9f9 5%, #e9e9e9 100%)',\r\n        backgroundColor: '#f9f9f9',\r\n        borderRadius: 6,\r\n        border: '1px solid #dcdcdc',\r\n        fontWeight: 'bold',\r\n        fontSize: '1.2em',\r\n    },\r\n    buttonCancel: {\r\n        color: '#000',\r\n    },\r\n    buttonSave: {\r\n        color: 'rgba(0, 145, 255, 1)',\r\n        marginLeft: 30\r\n    }\r\n}));\r\n\r\n\r\nconst EditDialog = (props) => {\r\n    const classes = useStyles();\r\n    const { title, showDialog, handleSaveClick, handleCloseClick, dialogRef, onSelectFile } = props;\r\n    const fileRef = React.createRef();\r\n    const [ currentFile, setFile ] = React.useState(null);\r\n\r\n    return (\r\n      <Fragment>\r\n        <Dialog\r\n          fullWidth\r\n          open={showDialog}\r\n          onClose={handleCloseClick}\r\n          aria-label={title}\r\n          ref={dialogRef}\r\n        >\r\n          <DialogTitle>{title}</DialogTitle>\r\n          <DialogContent style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-around', margin: 30 }}>\r\n              <DesktopMacIcon \r\n                style={{ fontSize: 50, cursor: 'pointer' }} \r\n                onClick={() => { console.log(fileRef.current); }} />\r\n              <input type='file' id='file' ref={fileRef} style={{ opacity:'0', position: \"absolute\", top: \"107px\", left: \"151px\", cursor: \"pointer\", zIndex: \"10\", bottom: \"149px\", width: \"47px\"}} onChange={e => {  if (e.target.files && e.target.files.length > 0) setFile(e.target.files[0]);  }} />\r\n              <ShopIcon style={{ fontSize: 50 }} />\r\n          </DialogContent>\r\n          <DialogActions style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', margin: 20 }}>\r\n            <Button \r\n                label=\"ra.action.cancel\"\r\n                onClick={handleCloseClick}\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                className={`${classes.button} ${classes.buttonCancel}`} >\r\n            </Button>\r\n            <Button \r\n                label=\"ra.action.upload\" \r\n                onClick={() => { onSelectFile(currentFile); handleSaveClick(); }}\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                className={`${classes.button} ${classes.buttonSave}`} >\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n};\r\n\r\n\r\n/**\r\n * Load the image in the crop editor.\r\n */\r\n// const cropEditor = document.querySelector('#crop-editor');\r\n\r\nclass EditImageCropper extends PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        src: null,\r\n        crop: {\r\n        //   x: 200,\r\n        //   y: 200,\r\n        //   unit: '%',\r\n        //   width: 30,\r\n        //   aspect: 16 / 9,\r\n        },\r\n        showDialog: false,\r\n    };\r\n   this.onChangePhtoClick.bind(this);\r\n  }\r\n\r\n  onSelectFile = e => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      this.readFile(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  readFile = file => {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => {\r\n      this.setState({ src: reader.result });\r\n    });\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  onImageLoaded = image => {\r\n    console.log('onImageLoaded');\r\n    // this.imageRef = image;\r\n    // this.setState({ crop: { unit: 'px', width: 50, height: 50 } });\r\n    // return false;\r\n  };\r\n\r\n  onCropComplete = (crop, percentCrop) => {\r\n    console.log('onCropComplete', crop, percentCrop);\r\n    this.makeClientCrop(crop);\r\n  };\r\n\r\n  onCropChange = (crop, percentCrop) => {\r\n    // console.log('onCropChange', crop, percentCrop);\r\n    this.setState({ crop: percentCrop });\r\n  };\r\n\r\n  onDragStart = () => {\r\n    console.log('onDragStart');\r\n  };\r\n\r\n  onDragEnd = () => {\r\n    console.log('onDragEnd');\r\n  };\r\n\r\n  onChangeToIncompleteCropClick = () => {\r\n    this.setState({\r\n      crop: {\r\n        aspect: 16 / 9,\r\n        unit: '%',\r\n        width: 100,\r\n      },\r\n    });\r\n  };\r\n\r\n  onChangePhtoClick = e => {\r\n      e.preventDefault();\r\n      console.log(\"change photo clicked\");\r\n      this.setState({ showDialog: true });\r\n  };\r\n\r\n  handleSaveClick = () => {\r\n    this.setState({ showDialog: false });\r\n  }\r\n\r\n  handleCloseClick = () => {\r\n    this.setState({ showDialog: false });\r\n  }\r\n\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement('canvas');\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    return new Promise(resolve => {\r\n      canvas.toBlob(blob => {\r\n        blob.name = fileName; // eslint-disable-line no-param-reassign\r\n        window.URL.revokeObjectURL(this.fileUrl);\r\n        this.fileUrl = window.URL.createObjectURL(blob);\r\n        resolve(this.fileUrl);\r\n      }, 'image/jpeg');\r\n    });\r\n  }\r\n\r\n  makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      this.getCroppedImg(this.imageRef, crop, 'newFile.jpeg').then(croppedImageUrl =>\r\n        this.setState({ croppedImageUrl })\r\n      );\r\n    }\r\n  }\r\n\r\n  renderVideo = (mp4Url) => (\r\n    <video\r\n      autoPlay\r\n      loop\r\n      style={{ display: 'block', maxWidth: '100%' }}\r\n      onLoadStart={e => {\r\n        // You must inform ReactCrop when your media has loaded.\r\n        e.target.dispatchEvent(new Event('medialoaded', { bubbles: true }));\r\n      }}\r\n    >\r\n      <source src={mp4Url} type=\"video/mp4\" />\r\n    </video>\r\n  );\r\n\r\n  renderSelectionAddon = () => <input placeholder=\"Type something\" />;\r\n\r\n  render() {\r\n    const { croppedImageUrl, showDialog } = this.state;\r\n\r\n    return (\r\n      <div className=\"\" style={{ width: '150px' }}>\r\n        {/*<div>\r\n          <input type=\"file\" onChange={this.onSelectFile} />\r\n        </div> */}\r\n        <EditDialog \r\n            title=\"Upload photo\" \r\n            submit={(result) => {console.log(result)}} \r\n            handleSaveClick={this.handleSaveClick} \r\n            handleCloseClick={this.handleCloseClick} \r\n            showDialog={showDialog}\r\n            onSelectFile={this.readFile} />\r\n        {!this.state.src && (\r\n            <div style={{ width: '150px', height: '200px', backgroundColor: '#ececec', display: 'flex', alignItems: 'center', justifyContent: 'center', cursor: 'pointer', flexDirection: 'column' }} \r\n                onClick={this.onChangePhtoClick} >\r\n                    <CloudUpload />\r\n                    <h5>Upload Photo</h5>\r\n            </div>\r\n        )}\r\n        {this.state.src && (\r\n          <>\r\n            <ReactCrop\r\n              // renderComponent={this.renderVideo()}\r\n              src={this.state.src}\r\n              crop={this.state.crop}\r\n              ruleOfThirds\r\n              // circularCrop\r\n              onImageLoaded={this.onImageLoaded}\r\n              onComplete={this.onCropComplete}\r\n              onChange={this.onCropChange}\r\n              onDragStart={this.onDragStart}\r\n              onDragEnd={this.onDragEnd}\r\n              // renderSelectionAddon={this.renderSelectionAddon}\r\n              // maxWidth={100}\r\n              // minHeight={100}\r\n            />\r\n            {/* <button onClick={this.onChangeToIncompleteCropClick}>Change to incomplete aspect crop</button> */}\r\n            <a href=\"/\" onClick={this.onChangePhtoClick} >\r\n                Change Photo\r\n            </a>\r\n          </>\r\n        )}\r\n        {croppedImageUrl && <img alt=\"Crop\" src={croppedImageUrl} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditImageCropper;","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nexport const Automation = () => (\r\n    <Card>\r\n        <CardHeader title=\"Welcome to the administration\" />\r\n        <CardContent>Lorem ipsum sic dolor amet...</CardContent>\r\n    </Card>\r\n);","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nexport const Faq = () => (\r\n    <Card>\r\n        <CardHeader title=\"Welcome to the administration\" />\r\n        <CardContent>Lorem ipsum sic dolor amet...</CardContent>\r\n    </Card>\r\n);","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nexport const Home = () => (\r\n    <Card>\r\n        <CardHeader title=\"Welcome to the administration\" />\r\n        <CardContent>Lorem ipsum sic dolor amet...</CardContent>\r\n    </Card>\r\n);","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nexport const Inbox = () => (\r\n    <Card>\r\n        <CardHeader title=\"Welcome to the administration\" />\r\n        <CardContent>Lorem ipsum sic dolor amet...</CardContent>\r\n    </Card>\r\n);","import React from 'react';\r\n// eslint-disable-next-line\r\nimport { Create, Edit, SimpleForm, required } from 'react-admin';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport { EditSelectInput, EditTextInput, EditFormLabel, EditRowGrid, EditToolbar } from '../../components';\r\n\r\n\r\nconst OrgInfoEditForm = (props) => {\r\n    const validateOrgInfoUpdate = (values) => {\r\n        const errors = {};\r\n        // if (!values.entity_name) {\r\n        //     errors.entity_name = [{ message: 'ra.validation.number'}];\r\n        // }\r\n        return errors;\r\n    };\r\n   \r\n    return ( <Edit resource={props.resource} id={props.id} basePath={props.path} className={props.className} >\r\n        <SimpleForm toolbar={<EditToolbar onSubmit={props.onSubmit} />} validate={validateOrgInfoUpdate}>\r\n            <EditRowGrid>\r\n                <Grid item md={3} sm={4} xs={12}>\r\n                    <EditFormLabel required={true} >Legal Entity Name</EditFormLabel>\r\n                </Grid>\r\n                <Grid item md={5} sm={6} xs={12}>\r\n                    <EditTextInput source=\"entity_name\" placeholder=\"ACME INC\" validate={[required()]} fullWidth />\r\n                </Grid>\r\n            </EditRowGrid>\r\n            <EditRowGrid>\r\n                <Grid item md={3} sm={4} xs={12}>\r\n                    <EditFormLabel required={true} >Entity Type</EditFormLabel>\r\n                </Grid>\r\n                <Grid item md={5} sm={6} xs={12}>\r\n                    <EditSelectInput source=\"entity_type\" validate={[required()]}\r\n                        choices={[ { id: 'S-Corp', name: 'ra.pages.org.sCorp' },\r\n                        { id: 'T-Corp', name: 'ra.pages.org.tCorp' }, \r\n                        { id: 'ST-Corp', name: 'ra.pages.org.stCorp' } ]}\r\n                        />\r\n                </Grid>\r\n            </EditRowGrid>\r\n            <EditRowGrid>\r\n                <Grid item md={3} sm={4} xs={12}>\r\n                    <EditFormLabel required={true} >Website</EditFormLabel>\r\n                </Grid>\r\n                <Grid item md={5} sm={6} xs={12}>\r\n                    <EditTextInput source=\"website\" placeholder=\"acme.com\" validate={[required()]} fullWidth />\r\n                </Grid>\r\n            </EditRowGrid>\r\n            <EditRowGrid>\r\n                <Grid item md={3} sm={4} xs={12}>\r\n                    <EditFormLabel >D-U-N-S&reg; Number</EditFormLabel>\r\n                </Grid>\r\n                <Grid item md={5} sm={6} xs={12}>\r\n                    <EditTextInput source=\"duns_number\" placeholder=\"xx-xxx-xxxx\" fullWidth />\r\n                </Grid>\r\n                <Grid item md={4} sm={6} xs={12} >\r\n                    <Typography component=\"a\" href=\"http://sample.com\">\r\n                        Look up D-U-N-S\r\n                    </Typography>\r\n                </Grid>\r\n            </EditRowGrid>\r\n            <EditRowGrid>\r\n                <Grid item md={3} sm={4} xs={12}>\r\n                    <EditFormLabel >EIN / Tax ID</EditFormLabel>\r\n                </Grid>\r\n                <Grid item md={5} sm={6} xs={12}>\r\n                    <EditTextInput source=\"tax_id\" placeholder=\"012-3456789\" fullWidth />\r\n                </Grid>\r\n                <Grid item md={4} sm={6} xs={12} >\r\n                    Either D-U-N-S&reg; Number or valid EIN is required.\r\n                </Grid>\r\n            </EditRowGrid>\r\n            <EditRowGrid>\r\n                <Grid item md={3} sm={4} xs={12}>\r\n                    <EditFormLabel required={true}>Primary Contact</EditFormLabel>\r\n                </Grid>\r\n                <Grid item md sm={6} xs={12}>\r\n                    <EditTextInput source=\"primary_firstname\" placeholder=\"First Name\" validate={[required()]} fullWidth />\r\n                </Grid>\r\n                <Grid item md sm={6} xs={12}>\r\n                    <EditTextInput source=\"primary_lastname\" placeholder=\"Last Name\" validate={[required()]} fullWidth />\r\n                </Grid>\r\n                <Grid item md={4} sm={6} xs={12} >\r\n                    Should be the business owner, perk budget approver, or a C-level executive.\r\n                </Grid>\r\n            </EditRowGrid>\r\n            <EditRowGrid>\r\n                <Grid item md={3} sm={4} xs={12}>\r\n                    <EditFormLabel required={true} >Contact Number</EditFormLabel>\r\n                </Grid>\r\n                <Grid item md={5} sm={6} xs={12}>\r\n                    <EditTextInput source=\"primary_number\" placeholder=\"(xxx) xxx xxxx\" validate={[required()]} fullWidth />\r\n                </Grid>\r\n            </EditRowGrid>\r\n            <EditRowGrid>\r\n                <Grid item md={3} sm={4} xs={12}>\r\n                    <EditFormLabel required={true} >Contact Email</EditFormLabel>\r\n                </Grid>\r\n                <Grid item md={5} sm={6} xs={12}>\r\n                    <EditTextInput source=\"primary_email\" validate={[required()]} fullWidth />\r\n                </Grid>\r\n                <Grid item md={4} sm={6} xs={12} >\r\n                    Should be a corporate email.\r\n                </Grid>\r\n            </EditRowGrid>\r\n        </SimpleForm>\r\n    </Edit> );\r\n};\r\n\r\nconst CustomTypography = ({basePath, ...props}) => (\r\n    <Typography component=\"h3\" style={{ marginTop: 20 }} >{props.children}</Typography>\r\n);\r\nconst CustomHr = ({basePath, ...props}) => (\r\n    <hr style={{ width: '100%', marginBottom: 25 }} />\r\n);\r\n\r\nconst OrgInfoAddressEditForm = (props) => {\r\n    const validateOrgInfoAddressUpdate = (values) => {\r\n        const errors = {};\r\n        if (values.secondary_email === 'secondary@email.com') { // TODO\r\n            errors.secondary_number = [{ message: 'ra.validation.secondaryNotEqualPrimary'}];\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    return ( <Edit resource={props.resource} id={props.id} basePath={props.path} className={props.className} >\r\n        <SimpleForm toolbar={<EditToolbar onCancel={props.onCancel} validate={validateOrgInfoAddressUpdate} />} >\r\n            <CustomTypography >Address of your company's HQ</CustomTypography>\r\n            <CustomHr />\r\n            <EditRowGrid>\r\n                <Grid item md={3} sm={4} xs={12}>\r\n                    <EditFormLabel required={true} >Street</EditFormLabel>\r\n                </Grid>\r\n                <Grid item md={5} sm={6} xs={12}>\r\n                    <EditTextInput source=\"street\" validate={[required()]} fullWidth />\r\n                </Grid>\r\n            </EditRowGrid>\r\n            <EditRowGrid>\r\n                <Grid item md={3} sm={4} xs={12}>\r\n                    <EditFormLabel >Unit</EditFormLabel>\r\n                </Grid>\r\n                <Grid item md={5} sm={6} xs={12}>\r\n                    <EditTextInput source=\"unit\" fullWidth />\r\n                </Grid>\r\n            </EditRowGrid>\r\n            <EditRowGrid>\r\n                <Grid item md={3} sm={4} xs={12}>\r\n                    <EditFormLabel required={true} >City</EditFormLabel>\r\n                </Grid>\r\n                <Grid item md={5} sm={6} xs={12}>\r\n                    <EditTextInput source=\"city\" validate={[required()]} />\r\n                </Grid>\r\n            </EditRowGrid>\r\n            <EditRowGrid>\r\n                <Grid item md={3} sm={4} xs={12}>\r\n                    <EditFormLabel required={true} >State</EditFormLabel>\r\n                </Grid>\r\n                <Grid item md sm={6} xs={12}>\r\n                    <EditTextInput source=\"state\" validate={[required()]} fullWidth />\r\n                </Grid>\r\n                <Grid item md sm={4} xs={12}>\r\n                    <EditFormLabel required={true} >Country</EditFormLabel>\r\n                </Grid>\r\n                <Grid item md sm={6} xs={12}>\r\n                    <EditTextInput source=\"country\" validate={[required()]} fullWidth />\r\n                </Grid>\r\n                <Grid item md={4} sm xs >\r\n                </Grid>\r\n            </EditRowGrid>\r\n            <EditRowGrid>\r\n                <Grid item md={3} sm={4} xs={12}>\r\n                    <EditFormLabel required={true} >Zip</EditFormLabel>\r\n                </Grid>\r\n                <Grid item md={5} sm={6} xs={12}>\r\n                    <EditTextInput source=\"zip\" validate={[required()]} />\r\n                </Grid>\r\n            </EditRowGrid>\r\n            <CustomHr />\r\n            <EditRowGrid>\r\n                <Grid item md={3} sm={4} xs={12}>\r\n                    <EditFormLabel >Secondary</EditFormLabel>\r\n                </Grid>\r\n                <Grid item md sm={6} xs={12}>\r\n                    <EditTextInput source=\"secondary_firstname\" placeholder=\"First Name\" fullWidth />\r\n                </Grid>\r\n                <Grid item md sm={6} xs={12}>\r\n                    <EditTextInput source=\"secondary_lastname\" placeholder=\"Last Name\" fullWidth />\r\n                </Grid>\r\n                <Grid item md={4} sm={6} xs={12} >\r\n                    We will reachout to this contact in case we are unable to reach the primary contact.\r\n                </Grid>\r\n            </EditRowGrid>\r\n            <EditRowGrid>\r\n                <Grid item md={3} sm={4} xs={12}>\r\n                    <EditFormLabel required={true} >Contact Number</EditFormLabel>\r\n                </Grid>\r\n                <Grid item md={5} sm={6} xs={12}>\r\n                    <EditTextInput source=\"secondary_number\" placeholder=\"(xxx) xxx xxxx\" validate={[required()]} fullWidth />\r\n                </Grid>\r\n            </EditRowGrid>\r\n            <EditRowGrid>\r\n                <Grid item md={3} sm={4} xs={12}>\r\n                    <EditFormLabel required={true} >Contact Email</EditFormLabel>\r\n                </Grid>\r\n                <Grid item md={5} sm={6} xs={12}>\r\n                    <EditTextInput source=\"secondary_email\" validate={[required()]} fullWidth />\r\n                </Grid>\r\n                <Grid item md={4} sm={6} xs={12} >\r\n                    Should be your work email.\r\n                </Grid>\r\n            </EditRowGrid>\r\n        </SimpleForm>\r\n    </Edit> );\r\n};\r\n\r\nexport const OrgInfoEdit = (props) => {\r\n    const { value, index } = props;\r\n    const [ statusValue, setStatusValue ] = React.useState(0);\r\n    const onSubmit = () => {\r\n        setStatusValue(1);\r\n    };\r\n    const onCancel = () => {\r\n        setStatusValue(0);\r\n    };\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            >\r\n            { value === index && (\r\n                statusValue === 0 ?\r\n             <OrgInfoEditForm {...props} onSubmit={onSubmit} /> :\r\n             <OrgInfoAddressEditForm {...props} onCancel={onCancel} /> )\r\n             }\r\n        </Typography>\r\n    );\r\n};","const PaymentSetupStyle = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inactiveNav: {\r\n        width: '153px',\r\n        height: '57px',\r\n        border: '1px solid #757575',\r\n        color: '#757575',\r\n        textDecoration: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: '6px',\r\n        fontSize: '1.3rem',\r\n        marginRight: '30px',\r\n    },\r\n    activeNav: {\r\n        color: '#0091FF'\r\n    },\r\n    button: {\r\n        textTransform: 'initial',\r\n        boxShadow: 'inset 0px 1px 0px 0px #ffffff',\r\n        background: 'linear-gradient(to bottom, #f9f9f9 5%, #e9e9e9 100%)',\r\n        backgroundColor: '#f9f9f9',\r\n        borderRadius: 6,\r\n        border: '1px solid #dcdcdc',\r\n        fontSize: '1.2em',\r\n        marginRight: '15px',\r\n        color: '#000',\r\n    },\r\n    button_active: {\r\n        color: '#0091FF',\r\n        fontWeight: 'Bold'\r\n    },\r\n});\r\n\r\n\r\nexport default PaymentSetupStyle;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography, Grid, withStyles } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Edit, SimpleForm, required, Button } from 'react-admin';\r\nimport { Captcha, captchaSettings } from 'reactjs-captcha';\r\nimport PaymentSetupStyle from './PaymentSetupStyle';\r\nimport { EditTextInput, EditFormLabel, EditRowGrid, EditToolbar, EditCheckBox, EditSelectInput } from '../../components';\r\n\r\n\r\nconst apiBaseUrl = process.env.REACT_APP_API_BASEURL;\r\n\r\nconst CustomHr = ({basePath, ...props}) => (\r\n    <hr style={{ width: '97%', marginBottom: 25 }} />\r\n);\r\n\r\nclass PaymentSetup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active_flag: true,\r\n            captcha_error_flag: false\r\n        };\r\n        captchaSettings.set({\r\n            captchaEndpoint: \r\n            apiBaseUrl + '/wp-content/recaptcha/botdetect-captcha-lib/simple-botdetect.php'\r\n        });\r\n        this.onClickCaptcha = this.FormWithCaptchaOnSubmitHandler.bind(this);\r\n    }\r\n\r\n    setActive(flag) {\r\n        this.setState({\r\n            active_flag: flag\r\n         });\r\n    }\r\n\r\n    validatePaymentUpdate(values) {\r\n        const errors = {};\r\n\r\n        // errors.entity_type = [{ message: 'ra.validation.number'}];\r\n\r\n        return errors;\r\n    }\r\n\r\n     // process the yourFormWithCaptcha on submit event\r\n    FormWithCaptchaOnSubmitHandler(event) {\r\n\r\n    // the user-entered captcha code value to be validated at the backend side\r\n    let userEnteredCaptchaCode = this.captcha.getUserEnteredCaptchaCode();\r\n\r\n    // the id of a captcha instance that the user tried to solve\r\n    let captchaId = this.captcha.getCaptchaId();\r\n\r\n    let postData = {\r\n      \"userEnteredCaptchaCode\": userEnteredCaptchaCode,\r\n      \"captchaId\": captchaId\r\n    };\r\n\r\n    let self = this;\r\n\r\n    // post the captcha data to the /your-app-backend-path on your backend.\r\n    // make sure you import the axios in this view with: import axios from 'axios';\r\n    fetch(apiBaseUrl + '/wp-content/recaptcha/index.php', {\r\n      method: 'post',\r\n      body: JSON.stringify(postData),\r\n      } \r\n     )\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        if (data.success === false) {\r\n            // captcha validation failed; reload image\r\n            // self.captcha.reloadImage();\r\n            // TODO: maybe display an error message, too\r\n            this.setState({\r\n                captcha_error_flag: true\r\n             });\r\n             console.log(event);\r\n            return false;\r\n        } else {\r\n            // TODO: captcha validation succeeded; proceed with your workflow\r\n            this.setState({\r\n                captcha_error_flag: false\r\n             });\r\n            console.log(\"succeed\");\r\n            return true;\r\n        }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n    event.preventDefault();\r\n    return false;\r\n   }\r\n\r\n    render() {\r\n        const { value, index, classes } = this.props;\r\n        const { active_flag, captcha_error_flag } = this.state;\r\n\r\n        return (\r\n            <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            >\r\n            {value === index && <Box p={3}>\r\n                <Edit resource={this.props.resource} id={this.props.id} basePath={this.props.path} className={this.props.className} >\r\n                    <SimpleForm toolbar={<EditToolbar onCancel={this.props.onCancel} onSubmit={this.onClickCaptcha} saveButtonLabel=\"ra.action.next\" />} validate={this.validatePaymentUpdate} >\r\n                        <EditRowGrid>\r\n                            <Grid item md={5} sm={4} xs={12}>\r\n                                <EditFormLabel style={{ color: 'rgba(0,0,0,0.72)' }}>Choose payment method to fund perk program</    EditFormLabel>\r\n                            </Grid>\r\n                        </EditRowGrid>\r\n                        <CustomHr />\r\n                        <EditRowGrid>\r\n                            <Grid item md={3} sm={4} xs={12} style={{ marginBottom: '20px'}}>\r\n                                <EditFormLabel>Payment Type</EditFormLabel>\r\n                            </Grid>\r\n                            <Grid item md={5} sm={6} xs={12} style={{ marginBottom: '20px'}}>\r\n                                <Button key=\"ACH(eCheck)\" label=\"ra.action.ach_btn\" size=\"large\" redirect={false} submitOnEnter={true} className={`${classes.button} ${active_flag && classes.button_active}`} onClick={() => this.setActive(true)}  />\r\n                                <Button key=\"Debit/Credit\" label=\"ra.action.debit_btn\" size=\"large\" redirect={false} submitOnEnter={true} className={`${classes.button} ${!active_flag && classes.button_active}`} onClick={() => this.setActive(false)} />\r\n                            </Grid>\r\n                        </EditRowGrid>\r\n\r\n                        {active_flag && (<>\r\n                            <EditRowGrid>\r\n                                <Grid item md={3} sm={4} xs={12}>\r\n                                    <EditFormLabel>Account Type</EditFormLabel>\r\n                                </Grid>\r\n                                <Grid item md={5} sm={6} xs={12}>\r\n                                    <EditSelectInput source=\"entity_type\" validate={[required()]}\r\n                                        choices={[ { id: 'S-Corp', name: 'ra.pages.org.checkingAccount' },\r\n                                        { id: 'T-Corp', name: 'ra.pages.org.savingsAccount' }, \r\n                                        ]}\r\n                                        />\r\n                                </Grid>\r\n                            </EditRowGrid>\r\n                            <EditRowGrid>\r\n                                <Grid item md={3} sm={4} xs={12}>\r\n                                    <EditFormLabel>Routing Number</EditFormLabel>\r\n                                </Grid>\r\n                                <Grid item md={5} sm={6} xs={12}>\r\n                                    <EditTextInput source=\"primary_number\" fullWidth />\r\n                                </Grid>\r\n                            </EditRowGrid>\r\n                            <EditRowGrid>\r\n                                <Grid item md={3} sm={4} xs={12}>\r\n                                    <EditFormLabel>Account Number</EditFormLabel>\r\n                                </Grid>\r\n                                <Grid item md={5} sm={6} xs={12}>\r\n                                    <EditTextInput source=\"primary_email\" validate={[required()]} fullWidth />\r\n                                </Grid>\r\n                            </EditRowGrid>\r\n                            <EditRowGrid>\r\n                                <Grid item md={3} sm={4} xs={12}>\r\n                                    <EditFormLabel>Confirm Account Number</EditFormLabel>\r\n                                </Grid>\r\n                                <Grid item md={5} sm={6} xs={12}>\r\n                                    <EditTextInput source=\"primary_email\" validate={[required()]} fullWidth />\r\n                                </Grid>\r\n                            </EditRowGrid>\r\n                        </>)}\r\n                        {!active_flag && (<>\r\n                            <EditRowGrid>\r\n                                <Grid item md={3} sm={4} xs={12}>\r\n                                    <EditFormLabel>Account Type</EditFormLabel>\r\n                                </Grid>\r\n                                <Grid item md={5} sm={6} xs={12}>\r\n                                    <EditSelectInput source=\"entity_type\" validate={[required()]}\r\n                                        choices={[ { id: 'S-Corp', name: 'ra.pages.org.sCorp' },\r\n                                        { id: 'T-Corp', name: 'ra.pages.org.tCorp' }, \r\n                                        { id: 'ST-Corp', name: 'ra.pages.org.stCorp' } ]}\r\n                                        />\r\n                                </Grid>\r\n                            </EditRowGrid>\r\n                            <EditRowGrid>\r\n                                <Grid item md={3} sm={4} xs={12}>\r\n                                    <EditFormLabel>Routing Number</EditFormLabel>\r\n                                </Grid>\r\n                                <Grid item md={5} sm={6} xs={12}>\r\n                                    <EditTextInput source=\"primary_number\" fullWidth />\r\n                                </Grid>\r\n                            </EditRowGrid>\r\n                            <EditRowGrid>\r\n                                <Grid item md={3} sm={4} xs={12}>\r\n                                    <EditFormLabel>Account Number</EditFormLabel>\r\n                                </Grid>\r\n                                <Grid item md={5} sm={6} xs={12}>\r\n                                    <EditTextInput source=\"primary_email\" validate={[required()]} fullWidth />\r\n                                </Grid>\r\n                            </EditRowGrid>\r\n                            <EditRowGrid>\r\n                                <Grid item md={3} sm={4} xs={12}>\r\n                                    <EditFormLabel>Confirm Account Number</EditFormLabel>\r\n                                </Grid>\r\n                                <Grid item md={5} sm={6} xs={12}>\r\n                                    <EditTextInput source=\"primary_email\" validate={[required()]} fullWidth />\r\n                                </Grid>\r\n                            </EditRowGrid>\r\n                           \r\n                        </>)}\r\n                            <EditRowGrid>\r\n                                <Grid item md={3} sm={4} xs={12} style={{paddingLeft: \"30px\", paddingTop: \"20px\", color: \"rgba(0, 0, 0, 0.5)\"}}>\r\n                                    Enter the characters in the image below\r\n                                </Grid>    \r\n                            </EditRowGrid>\r\n                            <EditRowGrid>\r\n                                <Grid item md={3} sm={4} xs={12} style={{paddingLeft: \"30px\"}}>\r\n                                    <Captcha captchaStyleName=\"paymentFormWithCaptcha\" ref={(captcha) => {this.captcha = captcha}} />   \r\n                                </Grid>    \r\n                                <Grid item md={5} sm={6} xs={12}>\r\n                                    <input type=\"text\" id=\"perkcaptcha_input\" style={{textTransform: \"uppercase\", border: \"1px solid #ccc\", borderRadius: \"5px\", padding: \"11px 20px\", fontSize: \"16px\"}}/>\r\n                                </Grid>\r\n                            </EditRowGrid>\r\n                            {captcha_error_flag === true ? <EditRowGrid>\r\n                                <Grid item md={3} sm={4} xs={12}></Grid>\r\n                                <Grid item md={5} sm={6} xs={12}>\r\n                                    <label style={{color: \"red\"}}>The entered characters don't match with the characters in the image</label>\r\n                                </Grid>\r\n                            </EditRowGrid> : \"\"\r\n                            }\r\n                            \r\n                            <EditRowGrid>\r\n                                <Grid item md={10} sm={4} xs={12} style={{paddingTop: \"30px\"}}>\r\n                                    <EditCheckBox name=\"perk_budget_approver\">I accept <EditFormLabel required={true} style={{paddingLeft: \"5px\", fontSize: \"1.0em\"}}><Link to=\"/\" style={{color: 'rgba(0, 145, 255, 1)'}}>terms and conditions.</Link></EditFormLabel></EditCheckBox>\r\n                                </Grid>\r\n                            </EditRowGrid>\r\n\r\n                    </SimpleForm>\r\n                </Edit>\r\n            </Box>}\r\n        </Typography>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(PaymentSetupStyle)(PaymentSetup)\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { PlaidLink } from 'react-plaid-link';\r\nimport { Typography, Grid } from '@material-ui/core';\r\n\r\nclass PaymentPlaid extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleOnLoad() {\r\n        // load\r\n    }\r\n\r\n    handleOnEvent() {\r\n        // on event\r\n    }\r\n\r\n    handleOnSuccess(token, metadata) {\r\n        // send token to client server\r\n    }\r\n\r\n    handleOnExit() {\r\n        // handle the case when your user exits Link\r\n    }\r\n\r\n    render() {\r\n        const { value, index } = this.props;\r\n        \r\n        return (\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={value !== index}\r\n                id={`simple-tabpanel-${index}`}\r\n                aria-labelledby={`simple-tab-${index}`}\r\n                >\r\n                { value === index && (\r\n                    <PlaidLink\r\n                        clientName=\"Your app name\"\r\n                        env=\"sandbox\"\r\n                        // institution={null}\r\n                        publicKey={process.env.REACT_APP_PLAID_PUBLIC_KEY}\r\n                        product={[ 'transactions']}\r\n                        // apiVersion={'v2'}\r\n                        countryCodes={['US']}\r\n                        token={'public-token-123...'}\r\n                        // selectAccount={true} // deprecated – use https://dashboard.plaid.com/link\r\n                        // webhook=\"https://webhooks.test.com\"\r\n                        onEvent={this.handleOnEvent}\r\n                        onExit={this.handleOnExit}\r\n                        onLoad={this.handleOnLoad}\r\n                        onSuccess={this.handleOnSuccess}>\r\n                        Open Link and connect a bank account to Plaid\r\n                    </PlaidLink> \r\n                )}\r\n            </Typography>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaymentPlaid;","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport const Invoices = (props) => {\r\n    const { value, index } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            >\r\n            {value === index && <Box p={3}>\r\n                <Typography component=\"p\">\r\n                    Invoices\r\n                </Typography>\r\n                </Box>}\r\n        </Typography>\r\n    );\r\n};","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport const TaxInfo = (props) => {\r\n    const { value, index } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            >\r\n            {value === index && <Box p={3}>\r\n                <Typography component=\"p\">\r\n                    Tax Info\r\n                </Typography>\r\n                </Box>}\r\n        </Typography>\r\n    );\r\n};","import React from 'react';\r\n// eslint-disable-next-line\r\nimport { Create, Edit, SimpleForm, required, ImageInput, ImageField, FileInput } from 'react-admin';\r\nimport { Typography, Grid } from '@material-ui/core';\r\n// import ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/lib/ReactCrop.scss';\r\nimport { EditTextInput, EditFormLabel, EditRowGrid, EditToolbar, EditCheckBox, EditImageCropper } from '../../components';\r\n\r\nconst CustomHr = ({basePath, ...props}) => (\r\n    <hr style={{ width: '100%', marginBottom: 25 }} />\r\n);\r\n\r\nconst onChangePasswordClick = e => {\r\n    e.preventDefault();\r\n    console.log(\"change password\");\r\n};\r\n\r\nconst onChangeIDClick = e => {\r\n    e.preventDefault();\r\n    console.log(\"upload ID\");\r\n};\r\n\r\nexport const UserSettings = (props) => {\r\n    const { value, index } = props;\r\n    const dialogRef = React.createRef();\r\n    // const [crop, setCrop] = React.useState({});\r\n    // const [src, setSource] = React.useState(process.env.PUBLIC_URL + '/images/avatar/1.png');\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            >\r\n            { value === index && (\r\n            <Edit resource={props.resource} id={props.id} basePath={props.path} className={props.className} >\r\n                <SimpleForm toolbar={<EditToolbar onCancel={props.onCancel} />} >\r\n                    <EditRowGrid>\r\n                        <Grid item md={3} sm={4} xs={12}>\r\n                            <EditFormLabel>My Profile</EditFormLabel>\r\n                        </Grid>\r\n                    </EditRowGrid>\r\n                    <EditRowGrid>\r\n                        <Grid item style={{ marginLeft: '20px' }}>\r\n                            <EditImageCropper ref={dialogRef} source=\"picture\" />\r\n                        </Grid>\r\n                        <Grid item md={6} sm={7} xs={8} style={{ marginLeft: '50px' }}>\r\n                            <div>\r\n                                <a href=\"/\" onClick={onChangePasswordClick} >\r\n                                    Change Password\r\n                                </a>\r\n                            </div>\r\n                            <div style={{ marginTop: 30 }}>\r\n                                <a href=\"/\" onClick={onChangeIDClick} >\r\n                                    Upload I.D\r\n                                </a>\r\n                            </div>\r\n                        </Grid>\r\n                    </EditRowGrid>\r\n                    <CustomHr />\r\n                    <EditRowGrid>\r\n                        <Grid item md={3} sm={4} xs={12}>\r\n                            <EditFormLabel required={true}>People Ops Contact</EditFormLabel>\r\n                        </Grid>\r\n                        <Grid item md sm={6} xs={12}>\r\n                            <EditTextInput source=\"primary_firstname\" placeholder=\"First Name\" fullWidth />\r\n                        </Grid>\r\n                        <Grid item md sm={6} xs={12}>\r\n                            <EditTextInput source=\"primary_lastname\" placeholder=\"Last Name\" fullWidth />\r\n                        </Grid>\r\n                        <Grid item md={4} sm={6} xs={12} >\r\n                            Resource who will actively manage or over see the perk program (HR/ People Ops/ Team lead).\r\n                        </Grid>\r\n                    </EditRowGrid>\r\n                    <EditRowGrid>\r\n                        <Grid item md={3} sm={4} xs={12}>\r\n                            <EditFormLabel required={true}>Contact Number</EditFormLabel>\r\n                        </Grid>\r\n                        <Grid item md={5} sm={6} xs={12}>\r\n                            <EditTextInput source=\"primary_number\" fullWidth />\r\n                        </Grid>\r\n                    </EditRowGrid>\r\n                    <EditRowGrid>\r\n                        <Grid item md={3} sm={4} xs={12}>\r\n                            <EditFormLabel required={true}>Contact Email</EditFormLabel>\r\n                        </Grid>\r\n                        <Grid item md={5} sm={6} xs={12}>\r\n                            <EditTextInput source=\"primary_email\" validate={[required()]} fullWidth />\r\n                        </Grid>\r\n                    </EditRowGrid>\r\n                    <CustomHr />\r\n                    <EditRowGrid>\r\n                        <Grid item md={3} sm={4} xs={12}>\r\n                            <EditCheckBox name=\"perk_budget_approver\">Add Perk Budget Approver</EditCheckBox>\r\n                        </Grid>\r\n                    </EditRowGrid>\r\n                    <EditRowGrid>\r\n                        <Grid item md={3} sm={4} xs={12}>\r\n                        </Grid>    \r\n                        <Grid item md sm={6} xs={12}>\r\n                            <EditTextInput source=\"secondary_firstname\" placeholder=\"First Name\" fullWidth />\r\n                        </Grid>\r\n                        <Grid item md sm={6} xs={12}>\r\n                            <EditTextInput source=\"secondary_lastname\" placeholder=\"Last Name\" fullWidth />\r\n                        </Grid>\r\n                        <Grid item md={4} sm={6} xs={12} >\r\n                            This contact’s email can be used to request perk budget approval.\r\n                        </Grid>\r\n                    </EditRowGrid>\r\n                    <EditRowGrid>\r\n                        <Grid item md={3} sm={4} xs={12}>\r\n                            <EditFormLabel>Contact Number</EditFormLabel>\r\n                        </Grid>\r\n                        <Grid item md={5} sm={6} xs={12}>\r\n                            <EditTextInput source=\"secondary_number\" placeholder=\"(xxx) xxx xxxx\" validate={[required()]} fullWidth />\r\n                        </Grid>\r\n                    </EditRowGrid>\r\n                    <EditRowGrid>\r\n                        <Grid item md={3} sm={4} xs={12}>\r\n                            <EditFormLabel>Contact Email</EditFormLabel>\r\n                        </Grid>\r\n                        <Grid item md={5} sm={6} xs={12}>\r\n                            <EditTextInput source=\"secondary_email\" validate={[required()]} fullWidth />\r\n                        </Grid>\r\n                    </EditRowGrid>\r\n                </SimpleForm>\r\n            </Edit>)\r\n             }\r\n        </Typography>\r\n    );\r\n};","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport const AcmeInc = (props) => {\r\n    const { value, index } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            >\r\n            {value === index && <Box p={3}>\r\n                <Typography component=\"p\">\r\n                    Acme Inc\r\n                </Typography>\r\n                </Box>}\r\n        </Typography>\r\n    );\r\n};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { OrgInfoEdit } from './OrgInfo';\r\nimport PaymentSetup from './PaymentSetup';\r\nimport PaymentPlaid from './PaymentPlaid';\r\nimport { Invoices } from './Invoices';\r\nimport { TaxInfo } from './TaxInfo';\r\nimport { UserSettings } from './UserSettings';\r\nimport { AcmeInc } from './AcmeInc';\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  top: {\r\n    backgroundColor: '#7d7d7d',\r\n    marginBottom: 30,\r\n    color: '#fff',\r\n    paddingLeft: 10\r\n  },\r\n  bar: {\r\n    backgroundColor: '#000',\r\n    margin: 30,\r\n    width: 'auto',\r\n    borderRadius: 7\r\n  },\r\n  tab: {\r\n    textTransform: 'initial'\r\n  },\r\n  tabPanel: {\r\n    marginLeft: 50,\r\n    marginRight: 50,\r\n  }\r\n}));\r\n\r\nconst MyOrgBar = (props) => {\r\n  const { classes, value, setValue } = props;\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" className={classes.bar}>\r\n      <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" >\r\n        <Tab label=\"Org Info\" {...a11yProps(0)} className={classes.tab} />\r\n        <Tab label=\"Payment Setup\" {...a11yProps(1)} className={classes.tab} />\r\n        <Tab label=\"Invoices\" {...a11yProps(2)} className={classes.tab} />\r\n        <Tab label=\"Tax Info\" {...a11yProps(3)} className={classes.tab} />\r\n        <Tab label=\"User Settings\" {...a11yProps(4)} className={classes.tab} />\r\n        <Tab label=\"Acme Inc\" {...a11yProps(5)} className={classes.tab} style={{ marginLeft: 'auto' }}/>\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport const MyOrgEdit = (props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h6\" className={classes.top}>My Organization</Typography>\r\n      <MyOrgBar classes={classes} value={value} setValue={setValue} />\r\n      <OrgInfoEdit value={value} index={0} className={classes.tabPanel} {...props} />\r\n      <PaymentPlaid value={value} index={1} className={classes.tabPanel} {...props} />\r\n      <Invoices value={value} index={2} className={classes.tabPanel} {...props} />\r\n      <TaxInfo value={value} index={3} className={classes.tabPanel} {...props} />\r\n      <UserSettings value={value} index={4} className={classes.tabPanel} {...props} />\r\n      <AcmeInc value={value} index={5} className={classes.tabPanel} {...props} />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nexport const Perks = () => (\r\n    <Card>\r\n        <CardHeader title=\"Welcome to the administration\" />\r\n        <CardContent>Lorem ipsum sic dolor amet...</CardContent>\r\n    </Card>\r\n);","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nexport const Reports = () => (\r\n    <Card>\r\n        <CardHeader title=\"Welcome to the administration\" />\r\n        <CardContent>Lorem ipsum sic dolor amet...</CardContent>\r\n    </Card>\r\n);","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nexport const Settings = () => (\r\n    <Card>\r\n        <CardHeader title=\"Welcome to the administration\" />\r\n        <CardContent>Lorem ipsum sic dolor amet...</CardContent>\r\n    </Card>\r\n);","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nexport const Setup = () => (\r\n    <Card>\r\n        <CardHeader title=\"Welcome to the administration\" />\r\n        <CardContent>Lorem ipsum sic dolor amet...</CardContent>\r\n    </Card>\r\n);","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nexport const Teams = () => (\r\n    <Card>\r\n        <CardHeader title=\"Welcome to the administration\" />\r\n        <CardContent>Lorem ipsum sic dolor amet...</CardContent>\r\n    </Card>\r\n);","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nexport const Tools = () => (\r\n    <Card>\r\n        <CardHeader title=\"Welcome to the administration\" />\r\n        <CardContent>Lorem ipsum sic dolor amet...</CardContent>\r\n    </Card>\r\n);","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Title } from 'react-admin';\r\n\r\nexport default () => (\r\n    <Card>\r\n        <Title title=\"Not Found\" />\r\n        <CardContent>\r\n            <h1>404: Page not found</h1>\r\n        </CardContent>\r\n    </Card>\r\n);","const convertFileToBase64 = file =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file.rawFile);\r\n\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = reject;\r\n    });\r\n\r\nconst addUploadCapabilities = requestHandler => (type, resource, params) => {\r\n    if (type === 'UPDATE' && resource === 'posts') {\r\n        if (params.data.pictures && params.data.pictures.length) {\r\n            // only freshly dropped pictures are instance of File\r\n            const formerPictures = params.data.pictures.filter(\r\n                p => !(p.rawFile instanceof File)\r\n            );\r\n            const newPictures = params.data.pictures.filter(\r\n                p => p.rawFile instanceof File\r\n            );\r\n\r\n            return Promise.all(newPictures.map(convertFileToBase64))\r\n                .then(base64Pictures =>\r\n                    base64Pictures.map(picture64 => ({\r\n                        src: picture64,\r\n                        title: `${params.data.title}`,\r\n                    }))\r\n                )\r\n                .then(transformedNewPictures =>\r\n                    requestHandler(type, resource, {\r\n                        ...params,\r\n                        data: {\r\n                            ...params.data,\r\n                            pictures: [\r\n                                ...transformedNewPictures,\r\n                                ...formerPictures,\r\n                            ],\r\n                        },\r\n                    })\r\n                );\r\n        }\r\n    }\r\n\r\n    return requestHandler(type, resource, params);\r\n};\r\n\r\nexport default addUploadCapabilities;","import { fetchUtils } from 'react-admin';\r\nimport jsonServerProvider from 'ra-data-json-server';\r\nimport addUploadFeature from './addUploadCapabilities';\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL;\r\nconst apiUsername = process.env.REACT_APP_API_USERNAME;\r\nconst apiPassword = process.env.REACT_APP_API_PASSWORD;\r\n\r\nconst httpClient = (url, options = {}) => {\r\n    if (!options.headers) {\r\n        options.headers = new Headers({ Accept: 'application/json' });\r\n    }\r\n    // Authorization by Basic Auth\r\n    const basicAuth = 'Basic ' + btoa(apiUsername + ':' + apiPassword);\r\n    options.headers.set('Authorization', basicAuth);\r\n    /* options.user = {\r\n        authenticated: true,\r\n        token: 'SRTRDFVESGNJYTUKTYTHRG'\r\n    }; */\r\n    return fetchUtils.fetchJson(url, options);\r\n};\r\nconst dataProvider = jsonServerProvider(apiUrl, httpClient);\r\n\r\n// upload image capable\r\nconst uploadCapableDataProvider = addUploadFeature(dataProvider);\r\n// eslint-disable-next-line\r\nconst delayedDataProvider = (type, resource, params) =>\r\n    new Promise(resolve =>\r\n        setTimeout(\r\n            () => resolve(uploadCapableDataProvider(type, resource, params)),\r\n            1000\r\n        )\r\n    );\r\n\r\nexport default dataProvider;","export default {\r\n    ra: {\r\n        action: {\r\n            add_filter: 'Add filter',\r\n            add: 'Add',\r\n            back: 'Go Back',\r\n            bulk_actions: '1 item selected |||| %{smart_count} items selected',\r\n            cancel: 'Cancel',\r\n            clear_input_value: 'Clear value',\r\n            clone: 'Clone',\r\n            confirm: 'Confirm',\r\n            create: 'Create',\r\n            delete: 'Delete',\r\n            edit: 'Edit',\r\n            export: 'Export',\r\n            list: 'List',\r\n            refresh: 'Refresh',\r\n            remove_filter: 'Remove this filter',\r\n            remove: 'Remove',\r\n            save: 'Save',\r\n            search: 'Search',\r\n            show: 'Show',\r\n            sort: 'Sort',\r\n            undo: 'Undo',\r\n            expand: 'Expand',\r\n            close: 'Close',\r\n            open_menu: 'Open menu',\r\n            close_menu: 'Close menu',\r\n            ach_btn: 'ACH(eCheck)',\r\n            debit_btn: 'Debit/Credit',\r\n            next: \"Next\",\r\n            upload: \"Upload\",\r\n        },\r\n        boolean: {\r\n            true: 'Yes',\r\n            false: 'No',\r\n            null: '',\r\n        },\r\n        page: {\r\n            create: 'Create %{name}',\r\n            dashboard: 'Dashboard',\r\n            edit: '%{name} #%{id}',\r\n            error: 'Something went wrong',\r\n            list: '%{name}',\r\n            loading: 'Loading',\r\n            not_found: 'Not Found',\r\n            show: '%{name} #%{id}',\r\n            empty: 'No %{name} yet.',\r\n            invite: 'Do you want to add one?',\r\n        },\r\n        input: {\r\n            file: {\r\n                upload_several:\r\n                    'Drop some files to upload, or click to select one.',\r\n                upload_single: 'Drop a file to upload, or click to select it.',\r\n            },\r\n            image: {\r\n                upload_several:\r\n                    'Drop some pictures to upload, or click to select one.',\r\n                upload_single:\r\n                    'Drop a picture to upload, or click to select it.',\r\n            },\r\n            references: {\r\n                all_missing: 'Unable to find references data.',\r\n                many_missing:\r\n                    'At least one of the associated references no longer appears to be available.',\r\n                single_missing:\r\n                    'Associated reference no longer appears to be available.',\r\n            },\r\n            password: {\r\n                toggle_visible: 'Hide password',\r\n                toggle_hidden: 'Show password',\r\n            },\r\n        },\r\n        message: {\r\n            about: 'About',\r\n            are_you_sure: 'Are you sure?',\r\n            bulk_delete_content:\r\n                'Are you sure you want to delete this %{name}? |||| Are you sure you want to delete these %{smart_count} items?',\r\n            bulk_delete_title:\r\n                'Delete %{name} |||| Delete %{smart_count} %{name}',\r\n            delete_content: 'Are you sure you want to delete this item?',\r\n            delete_title: 'Delete %{name} #%{id}',\r\n            details: 'Details',\r\n            error:\r\n                \"A client error occurred and your request couldn't be completed.\",\r\n            invalid_form: 'The form is not valid. Please check for errors',\r\n            loading: 'The page is loading, just a moment please',\r\n            no: 'No',\r\n            not_found:\r\n                'Either you typed a wrong URL, or you followed a bad link.',\r\n            yes: 'Yes',\r\n            unsaved_changes:\r\n                \"Some of your changes weren't saved. Are you sure you want to ignore them?\",\r\n        },\r\n        navigation: {\r\n            no_results: 'No results found',\r\n            no_more_results:\r\n                'The page number %{page} is out of boundaries. Try the previous page.',\r\n            page_out_of_boundaries: 'Page number %{page} out of boundaries',\r\n            page_out_from_end: 'Cannot go after last page',\r\n            page_out_from_begin: 'Cannot go before page 1',\r\n            page_range_info: '%{offsetBegin}-%{offsetEnd} of %{total}',\r\n            page_rows_per_page: 'Rows per page:',\r\n            next: 'Next',\r\n            prev: 'Prev',\r\n        },\r\n        auth: {\r\n            auth_check_error: 'Please login to continue',\r\n            user_menu: 'Profile',\r\n            username: 'Username',\r\n            password: 'Password',\r\n            sign_in: 'Sign in',\r\n            sign_in_error: 'Authentication failed, please retry',\r\n            logout: 'Logout',\r\n        },\r\n        notification: {\r\n            updated: 'Element updated',\r\n            created: 'Element created',\r\n            deleted: 'Element deleted |||| %{smart_count} elements deleted',\r\n            bad_item: 'Incorrect element',\r\n            item_doesnt_exist: 'Element does not exist',\r\n            http_error: 'Server communication error',\r\n            data_provider_error:\r\n                'dataProvider error. Check the console for details.',\r\n            i18n_error:\r\n                'Cannot load the translations for the specified language',\r\n            canceled: 'Action cancelled',\r\n            logged_out: 'Your session has ended, please reconnect.',\r\n        },\r\n        validation: {\r\n            required: 'This field is required',\r\n            minLength: 'Must be %{min} characters at least',\r\n            maxLength: 'Must be %{max} characters or less',\r\n            minValue: 'Must be at least %{min}',\r\n            maxValue: 'Must be %{max} or less',\r\n            number: 'Must be a number',\r\n            email: 'Must be a valid email',\r\n            oneOf: 'Must be one of: %{options}',\r\n            regex: 'Must match a specific format (regexp): %{pattern}',\r\n            secondaryNotEqualPrimary: 'Your secondary contact information can not be same as your primary',\r\n        },\r\n        pages: {\r\n            org: {\r\n                sCorp: 'S-Corp',\r\n                tCorp: 'T-Corp',\r\n                stCorp: 'ST-Corp',\r\n                savingsAccount: 'Savings Account',\r\n                checkingAccount: 'Checking Account',\r\n            }\r\n        }\r\n    },\r\n};","import lodashGet from 'lodash/get';\r\nimport englishMessages from './en';\r\n\r\nlet messages = englishMessages;\r\n\r\nlet locale = 'en';\r\n\r\nconst i18nProvider = {\r\n    translate: key => lodashGet(messages, key),\r\n    changeLocale: newLocale => {\r\n        messages = (newLocale === 'en') ? englishMessages : englishMessages;\r\n        locale = newLocale;\r\n        return Promise.resolve();\r\n    },\r\n    getLocale: () => locale,\r\n    allowMissing: true,\r\n};\r\n\r\nexport default i18nProvider;","import React from 'react';\r\nimport { Admin, Resource } from 'react-admin';\r\n\r\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\nimport TuneOutlinedIcon from '@material-ui/icons/TuneOutlined';\r\nimport HouseOutlinedIcon from '@material-ui/icons/HouseOutlined';\r\nimport BuildOutlinedIcon from '@material-ui/icons/BuildOutlined';\r\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\r\nimport ForumOutlinedIcon from '@material-ui/icons/ForumOutlined';\r\nimport CardGiftcardOutlinedIcon from '@material-ui/icons/CardGiftcardOutlined';\r\nimport PeopleOutlineOutlinedIcon from '@material-ui/icons/PeopleOutlineOutlined';\r\nimport BrightnessAutoOutlinedIcon from '@material-ui/icons/BrightnessAutoOutlined';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nimport { AdminLayout } from './components';\r\nimport { Automation, Faq, Home, Inbox, MyOrgEdit, NoFound, Perks, Reports, Settings, Setup, Teams, Tools } from './pages';\r\n\r\nimport dataProvider from './services/dataProvider';\r\nimport i18nProvider from './i18n/i18nProvider';\r\n\r\nconst App = () => {\r\n  const userId = localStorage.getItem('perkfix_user_id');\r\n  const teamId = localStorage.getItem('perkfix_team_id');\r\n  const orgId = localStorage.getItem('perkfix_org_id');\r\n\r\n  return (userId && teamId && orgId && \r\n    <Admin \r\n      dataProvider={dataProvider}\r\n      layout={AdminLayout}\r\n      catchAll={NoFound}\r\n      title=\"Perkfix Admin\"\r\n      dashboard={Home}\r\n      i18nProvider={i18nProvider}\r\n      >\r\n        <Resource name=\"home\" list={Home} icon={HomeOutlinedIcon} options={{ label: 'Home' }}/>\r\n        <Resource name=\"setup\" list={Setup} icon={TuneOutlinedIcon} options={{ label: 'Setup' }}/>\r\n        <Resource name=\"org\" edit={MyOrgEdit} icon={HouseOutlinedIcon} options={{ label: 'My Org', url: '/'+orgId }} />\r\n        <Resource name=\"tool\" list={Tools} icon={BuildOutlinedIcon} options={{ label: 'Tools' }}/>\r\n        <Resource name=\"report\" list={Reports} icon={ReportOutlinedIcon} options={{ label: 'Reports' }}/>\r\n        <Resource name=\"inbox\" list={Inbox} icon={ForumOutlinedIcon} options={{ label: 'Inbox' }}/>\r\n        <Resource name=\"perk\" list={Perks} icon={CardGiftcardOutlinedIcon} options={{ label: 'Perks' }}/>\r\n        <Resource name=\"team\" list={Teams} icon={PeopleOutlineOutlinedIcon} options={{ label: 'Teams' }}/>\r\n        <Resource name=\"automation\" list={Automation} icon={BrightnessAutoOutlinedIcon} options={{ label: 'Automation' }}/>\r\n        <Resource name=\"setting\" list={Settings} icon={SettingsIcon} options={{ label: 'Settings' }}/>\r\n        <Resource name=\"faq\" list={Faq} icon={InfoIcon} options={{ label: 'FAQ' }}/>\r\n    </Admin>\r\n  );\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}